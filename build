#!/bin/sh

# Generate utf8 include with xxd
xxd -i src/utf8.h  | sed 's/\([0-9a-f]\)$/\0, 0x00/' > src/strutf8.xxd
xxd -i src/arena.h | sed 's/\([0-9a-f]\)$/\0, 0x00/' > src/strarena.xxd

# Clean

if [ "$1" = "install" ]; then
  # Build release
  cc src/pgen.c -o pgen -O3 -march=native

  # Install binary
  sudo cp pgen /bin/pgen
  echo "Installed pgen."
elif [ "$1" = "profile" ]; then
  # Build pgen and generate tokenizer and parser.
  cc src/pgen.c -o pgen
  ./pgen -u examples/pl0.tok examples/pl0.peg -o examples/pl0.h

  cd examples/

  # Build pl0 tokenizer/parser for profiling
  cc pl0.c -static -O3 -march=native -ggdb3

  # Profile with Callgrind
  valgrind --tool=callgrind --collect-jumps=yes --dump-instr=yes ./a.out 2>/dev/null
  callgrind_annotate callgrind.out* > calls
  nano calls

  # Profile with Cachegrind
  valgrind --tool=cachegrind --branch-sim=yes ./a.out 2>/dev/null
  cg_annotate cachegrind.out.* > cache
  nano cache

  # Dump the instructions
  objdump -D a.out > dump
  nano dump

  # Make a flamegraph
  #flamegraph ./a.out

  # Clean up
  rm dump calls cache cachegrind.out.* callgrind.out.* 2>/dev/null
  cd ..

elif [ "$1" = "macrocheck" ]; then

  # Build pgen and examples
  clang src/pgen.c -o pgen
  ./pgen examples/pl0.tok examples/pl0.peg -o examples/pl0.h

  # Check
  echo '#include <limits.h>'   >  .empty.c
  echo '#include <stddef.h>'   >> .empty.c
  echo '#include <stdint.h>'   >> .empty.c
  echo '#include <stdio.h>'    >> .empty.c
  echo '#include <stdlib.h>'   >> .empty.c
  echo '#include <string.h>'   >> .empty.c
  echo '#include <inttypes.h>' >> .empty.c

  cc -dM -E .empty.c       | sort > .predef.c
  cc -dM -E examples/pl0.h | sort > .nowdef.c
  diff .predef.c .nowdef.c | grep "<" | sed 's/^<\ //g' | cut -d' ' -f2-
  rm .empty.c .predef.c .nowdef.c

else
  # Build debug
  clang src/pgen.c -o pgen -fsanitize=address -g -Wall -Wextra -Wpedantic -Wno-unused-parameter -Wno-unused-variable

  # Generate pl0 example
  ./pgen examples/pl0.tok examples/pl0.peg -o examples/pl0.h

  # Build and run pl0 example
  cd examples/
  cc pl0.c -fsanitize=address -g
  ./a.out
  cd ..
fi




